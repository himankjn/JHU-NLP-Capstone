plot(model$residuals,model$fitted.values)
plot(model$residuals,airq$Ozone)
plot(model$residuals,model$fitted.values)
airq$Ozone
model$fitted.values
#8:
par(mfrow=c(1,1))
plot(model,which=1)
plot(model$residuals,model$fitted.values)
plot(model$residuals,model$fitted.values)
#8:
par(mfrow=c(1,1))
plot(model,which=1)
plot(model$fitted.values,model$residuals)
plot(model$residuals,airq$Ozone)
plot(airq$Ozone,model$residuals)
plot(airq$Ozone,model$residuals)
plot(model$fitted.values,model$residuals)
plot(airq$Ozone,model$residuals)
plot(model$fitted.values,model$residuals)
plot(airq$Ozone,model$residuals)
plot(model$fitted.values,airq$Ozone)
plot(model$fitted.values,airq$Ozone)
plot(model$fitted.values,airq$Ozone)
predict(model,newdata = airq)
unname(predict(model,newdata = airq))
model$fitted.values
plot(model$fitted.values,airq$Ozone)
which.max(predicted)
which.max(model$fitted.values)
leveragePlots(model)
leveragePlot(model)
leveragePlots(model)
plot(model,which=2)
plot(model,which=3)
plot(model,which=4)
plot(model,which=6)
plot(model,which=5)
which.max(model$fitted.values
which.max(model$fitted.values)
which.max(model$fitted.values)
plot(model$fitted.values,airq$Ozone)
plot(model,which=5)
plot(airq$SolarR,airq$Ozone)
plot(airq$Wind,airq$Ozone)
plot(
plot(model$fitted.values)
)
plot(
plot(1:20,model$fitted.values)
)
plot(1:20,model$fitted.values)
par(mfrow=c(2,2))
plot(airq$SolarR,airq$Ozone)
plot(airq$Wind,airq$Ozone)
plot(airq$Temp,airq$Ozone)
plot(airq$Day,airq$Ozone)
plot(airq$SolarR,airq$Ozone)
plot(airq$Wind,airq$Ozone)
plot(airq$Temp,airq$Ozone)
plot(airq$Day,airq$Ozone)
which.max(airq$SolarR)
which.max(airq$Wind)
which.max(airq$Temp)
which.max(airq$Day)
which.max(model$fitted.values)
which.max(airq$SolarR)
which.max(airq$Wind)
which.max(airq$Temp)
which.max(airq$Day)
which.max(model$fitted.values)
summary(model)
model
summary(model)
model$re
model$residuals
model$df.residual
model$residuals
sum(model$residuals)
sum(model$residuals^2)
mean(model$residuals^2)
sqrt(mean(model$residuals^2))
RMSE(model$residuals)
plot(model)
summary(model$residuals)
vif(model)
library(compositions)
model$coefficients
model$terms
model
summary(model)
R2(model)
summary(model)
R2(model)
1/(1-R2(model))
library(MASS)
biopsy
library(gcookbook)
cabbage_exp
library(gp)
library(ggplot2)
g<-ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
g
g<-ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot(aes(group=Date))
g
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot(aes(group=Date))
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot(aes(group=Date))
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
sp1 + geom_point()
sp1 <- ggplot(ChickWeight, aes(x=Time, y=weight))
sp1 <- ggplot(ChickWeight, aes(x=Time, y=weight))
sp1 + geom_point()
sp1+boxplot()
geom_boxplot(aes(group=Time))
sp1+geom_boxplot(aes(group=Time))
sp1+boxplot()
sp1+boxplot(x=Time)
sp1+boxplot(aes(x=Time))
ChickWeight
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
p <- ggplot(countries, aes(x=healthexp, y=infmortality, size=GDP)) +
geom_point(shape=21, colour="black", fill="cornsilk")
p
cdat <- subset(countries, Year==2009 &
Name %in% c("Canada", "Ireland", "United Kingdom", "United States",
"New Zealand", "Iceland", "Japan", "Luxembourg",
"Netherlands", "Switzerland"))
p <- ggplot(cdat, aes(x=healthexp, y=infmortality, size=GDP)) +
geom_point(shape=21, colour="black", fill="cornsilk")
p
p + scale_size_area(max_size=15)
p + scale_size_area(max_size=20)
c2009 <- subset(countries, Year==2009,
select=c(Name, GDP, laborrate, healthexp, infmortality))
countries
pairs(countries[,3:])
countries[,3:]
countries[1]
countries[:,:]
countries[,]
countries[,3:]
countries[,3:6]
c<-countries[,3:6]
pairs(c)
countries<-countries[countries$Year=2009]
c<-countries[,3:6]
pairs(c)
countries<-countries[countries$Year==2009]
countries<-countries[countries$Year==2009,]
c<-countries[,3:6]
pairs(c)
install.packages("GGally")
library(GGally)
ggpairs(c)
ggpairs(c,na.rm=TRUE)
ggpairs(c)
c<-countries[,4:6]
pairs(c,complet)
install.packages("GGally")
library(GGally)
ggpairs(c)
cabbage_exp
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_box()
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
cabbage_exp$col='no'
cabbage_exp$col[cabbage_exp$Date==d16]='yes'
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=col))+geom_boxplot()
cabbage_exp$col[cabbage_exp$Date=='d16']='yes'
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=col))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=col))+geom_boxplot()+
scale_fill_brewer(palette = 'Set1')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=col))+geom_boxplot()+
scale_fill_brewer(palette = 'Set1',guide=FALSE)
ggplot(cabbage_exp,aes(Date,Wegith))+geom_point()
ggplot(cabbage_exp,aes(Date,Weight))+geom_point()
ggplot(cabbage_exp,aes(Date,Weight))+geom_point()+geom_line()
ggplot(cabbage_exp,aes(Date,Weight))+geom_point()+geom_line()
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_point()+geom_line()
cabbage_exp
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='d16'],aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
cabbage_exp[cabbage_exp$Cultivar=='d16'
cabbage_exp[cabbage_exp$Cultivar=='d16']
cabbage_exp[cabbage_exp$Cultivar=='d16']
ggplot(cabbage_exp[cabbage_exp$Cultivar=='d16',],aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='d16',],aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='c29',],aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='c39',],aes(x=Date,y=Weight))+geom_point()+geom_line()+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='c39',],aes(x=Date,y=Weight))+geom_point()+geom_line()
ggplot(cabbage_exp[cabbage_exp$Cultivar=='c39',],aes(x=Date,y=Weight))+geom_point()+geom_line(aes(group=1))
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_bar()
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_bar(stat='identity')
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_bar(stat='identity')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_bar(stat='identity',colour='white')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_bar(stat='identity',fill='white')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp[cabbage_exp$Cultivar=='c39',],aes(x=Date,y=Weight))+geom_bar(stat='identity',fill='white')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',fill='')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',fill='white')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',position = 'dodge')+geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',position = 'dodge')+
geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se),width=0.2)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',position = 'dodge')+
geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se),width=0.2,position=position_dodge(0.9))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat='identity',position = 'dodge')+
geom_errorbar(aes(ymin=Weight-se,ymax=Weight+se),width=0.2,position=position_dodge(1))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+coord_flip(0)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+coord_flip()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+scale_y_continuous(limits=c(0,4))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+scale_y_continuous(limits=c(0,2,4))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+scale_y_continuous(limits=c(0,4))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+scale_y_continuous(limits=c(0,4),breaks = c(1,2,3))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))+
scale_y_reverse()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_reverse()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(breaks=c('d21','d20','d16'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
+
scale_x_discrete(breaks=c('d21','d20','d16'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(breaks=c('d21','d20','d16'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed(2)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed(3)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed(1)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed(0.5)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.ticks = 'none')
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.ticks = element_blank())
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.ticks = element_blank(),axis.text.x=element_blank())
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.ticks = element_blank(),axis.text.x=element_blank(),axis.title = element_blank())
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=2))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
p + theme(axis.line = element_line(colour="black"))
p
p + theme(axis.line = eelement_blank())
p + theme(axis.line = element_blank())
p + theme(axis.line = element_line(colour="black"))
p + theme(axis.line = element_blank())
line(colour="black")
p + theme(axis.line = element_line(colour="black"))
p + theme(axis.line = element_line(colour="black"))+scale_x_log10()
p + theme(axis.line = element_line(colour="black"))+scale_y_log10()
p + theme(axis.line = element_line(colour="black"))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))+coord_polar()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
p + theme(axis.line = element_line(colour="black"))+labs(title='chuttad')
p + theme(axis.line = element_line(colour="black"))+labs()
p <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
p + theme(text=element_text(colour='red'))
p + theme(text=element_text(colour='red'),axis.ticks.x=element_line(colour='red'))
p + theme(text=element_text(colour='red'),axis.ticks.x=element_line(colour='red'),panel.grid.major = element_line(colour='blue'))
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_boxplot()+
scale_x_discrete(limits=c('d21','d20','d16'),breaks=c('d20','d21'))+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_boxplot()+coord_fixed()+
theme(axis.text.x=element_text(colour='darkred',size=20,face='italic',family='Times'))
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_boxplot()
cabbage_exp
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot(group=Cultivar)
ggplot(cabbage_exp,aes(x=Date,y=Weight))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+guides(FALSE)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+guides(fill=FALSE)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(0)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme()
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(legend.position = 'top')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(legend.position = 'topright')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(legend.position = 'topt')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(legend.position = 'top')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+theme(legend.position = 'top')+scale_fill_brewer(palette = 'Set1')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+
theme(legend.position = 'top')+scale_fill_discrete(limits=c('d20','d16','d21'))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))
p <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
p + theme(text=element_text(colour='red'),axis.ticks.x=element_line(colour='red'),panel.grid.major = element_line(colour='blue'))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=col))+geom_boxplot()+
scale_fill_brewer(palette = 'Set1',guide=FALSE)
ggplot(cabbage_exp,aes(Date,Weight))+geom_boxplot()+
scale_y_continuous(limits=c(0,4),breaks = c(1,2,3),labels=c('a','b','c'))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')+theme(legend.title = element_text(colour='blue'))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')+
theme(legend.title = element_blank())
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')+
theme(legend.title = element_blank())
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Date))+geom_boxplot()+labs(fill='Date')+
theme(legend.title = element_blank())+facet_grid(Cultivar~.)
ggplot(mpg,aes(disp,mpg))
mpg
ggplot(mpg,aes(displ,hwy))
ggplot(mpg,aes(displ,hwy))+geom_point()
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~.)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(~drv)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~class)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~.)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~cyl)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~.
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~.)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_grid(drv~.)
ggplot(mpg,aes(displ,hwy))+geom_point()+facet_wrap(drv~.)
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_boxplot(0)
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_boxplot()
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_point()
ggplot(cabbage_exp,aes(Date,Weight,fill=Cultivar))+geom_tile()
coutries
countries
mpg
ggplot(mpg,aes(year,hwy,fill=cty))+geom_tile()
ggplot(mpg,aes(year,hwy,fill=cty))+geom_raster()
presidents
ggplot(mpg,aes(year,y=drv,fill=hwy))+geom_raster()
mpg$displ
mpg$cyl
crosstab(mpg$cyl)
table(mpg$cyl)
table(mpg$cyl)+geom_tile()
mpg
mtcars
library(rgl)
install.packages("rgl")
library(rgl)
shiny::runApp('Documents/Next-Word-Prediction')
install.packages('tm')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp()
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
runApp()
runApp('Documents/Next-Word-Prediction')
install.packages("ISOcodes")
runApp('Documents/Next-Word-Prediction')
install.packages("RSpectra")
install.packages("RSpectra")
install.packages("RWeka")
install.packages("RWeka")
install.packages("RWekajars")
install.packages("RcppParallel")
install.packages("Rttf2pt1")
install.packages("SnowballC")
install.packages("XML")
install.packages("chron")
install.packages("coda")
install.packages("dtp")
runApp('Documents/Next-Word-Prediction')
runApp('Documents/Next-Word-Prediction')
install.packages("extrafont")
install.packages("extrafontdb")
install.packages("fastmatch")
install.packages("dtplyr")
install.packages("fastmatch")
install.packages("gdata")
install.packages("igraph")
install.packages("gender")
install.packages("network")
install.packages("openNLP")
runApp('Documents/Next-Word-Prediction')
runApp()
runApp('Documents/Next-Word-Prediction')
shiny::runApp()
shiny::runApp()
library(shiny)
runApp()
runApp()
shinyUI(fluidPage(
titlePanel("Word Prediction by Katz's Back Off Model"),
mainPanel(
h4("This is a Prototype text processing Application that is used to predict next word in a sentence using Katz's back off model."),
h4("It's part of the John Hopkins University Data Science capstone project from Coursera."),
h4("Follow links below for Further information!"),
h5(a("JHU Data Science Coursera",href="https://www.coursera.org/specializations/jhu-data-science")),
h5(a("Documentation for the Application",href="http://rpubs.com/himank369123/JHUCAPSTONE")),
h5(a("Source Code and other Resources",href="https://github.com/himankjn/JHU-NLP-Capstone")),
HTML("The <b> Word Prediction </b> tab can be used to test the App."),br(),
HTML("The <b> BiGram, TriGram,TetraGram,PentaGram </b> tabs explore commonly occuring bigrams,trigrams,tetragrams and pentagrams."),br(),br(),
tabsetPanel(
type="tabs",
tabPanel("Word Prediction",
br(),
h1("Word Predicion using Ngrams"),
sidebarLayout(
sidebarPanel(
span(h2("Instructions to use the App:"),style="color:blue"),
tags$div(tags$ul(
tags$li(tags$span("Type any sentence in the textbox")),
tags$li(tags$span("The next word predicted is show below in purple color")),
tags$li(tags$span("A question mark indicates inability to predict next word")))),
span(HTML("<b>Note:</b> Due to limitation of resources and to reduce the computation time, some accuracy has been compromised"),style="color:red")
),
mainPanel(
textInput("box1",h3("Type a sentence below: ")),
span(h6("Note: Wait initially till screen displays \"Type Something....\""),style="color:red"),
h3("THE PREDICTION IS:"),
span(h1(textOutput("prediction"),style="color:purple"))
)
)
),
tabPanel("BiGram",
br(),
h1("Most Frequently Occuring Bigrams."),
mainPanel(
img(src='2.png'),
)
),
tabPanel("TriGram",
br(),
h1("Most Frequently Occuring Trigrams."),
mainPanel(
img(src='3.png'),
)
),
tabPanel("TetraGram",
br(),
h1("Most Frequently Occuring Tetragrams."),
mainPanel(
img(src='4.png'),
)
)
)
)
)
)
library(shiny)
library(shiny)
runApp()
runApp()
runApp()
runApp()
